# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer

import pygame

pygame.init()

import sys

from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, Label

OUTPUT_PATH = Path(__file__).parent
import os
ASSETS_PATH = os.path.join(os.path.dirname(__file__), "assets", "frame0")

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

##################################################
##################################################

## ********************* FUNCIONES ********************* 

###### Movimiento del rectangulo para seleccionar los botones ######
def move_rectangle_to(position):
    canvas.coords(rectangle, 290.0, options_positions[position] - 3, 431.0, options_positions[position] + 3)

def on_key_press(event):
    global rectangle_position
    if event.keysym == 'Up':
        rectangle_position = (rectangle_position - 1) % 3
    elif event.keysym == 'Down':
        rectangle_position = (rectangle_position + 1) % 3
    move_rectangle_to(rectangle_position)
##################################################

###### Función para manejar las teclas presionadas ######

    # Check the current position and perform actions
    if event.keysym == 'Return':
        if rectangle_position == 0:
            # Action for button_2 (Add your code here)
            print("Action for Play")
        elif rectangle_position == 1:
            # Action for button_3 (Add your code here)
            print("Action for Scores")
        elif rectangle_position == 2:
            # Action for button_4 (Add your code here)
            window.destroy()

##################################################
##################################################

window = Tk()

# Obtener dimensiones de la pantalla
screen_width = window.winfo_screenwidth()
screen_height = window.winfo_screenheight()

# Dimensiones de la ventana
window_width = 720
window_height = 720

# Calcular coordenadas para centrar la ventana
x_position = (screen_width - window_width) // 2
y_position = (screen_height - window_height) // 2

# Establecer la geometría de la ventana
window.geometry(f"{window_width}x{window_height}+{x_position}+{y_position}")
window.configure(bg="#222429")

## --------------------------------------------

canvas = Canvas(
    window,
    bg = "#222429",
    height = 720,
    width = 720,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

##################################################
##################################################

################## MENU ###################

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    360.0,
    123.0,
    image=image_image_1
)

# -----------------------------------------------
####### OJO: Manejar las posciones desde aqui #########
x_center = canvas.winfo_reqwidth() / 2  # Obtenemos el ancho del canvas y dividimos por 2
y_offset = 70.0
# -----------------------------------------------

""""
Menu_image_1 = PhotoImage(
    file=relative_to_assets("Menu_label.png"))
# Usamos la posición x calculada y mantenemos la posición y original
Menu_1 = canvas.create_image(
    x_center,
    166.0 + y_offset,
    image=Menu_image_1
)
"""

# -----------------------------------------------

Option_play_image = PhotoImage(
    file=relative_to_assets("Option_play.png"))
Option_play = canvas.create_image(
    x_center,
    234.0 + y_offset,
    image=Option_play_image
)

# -----------------------------------------------

Option_scores_image = PhotoImage(
    file=relative_to_assets("Option_scores.png"))
Option_scores = canvas.create_image(
    x_center,
    305.0 + y_offset,
    image=Option_scores_image
)

# -----------------------------------------------

Option_exit_image = PhotoImage(
    file=relative_to_assets("Option_exit.png"))
Option_exit = canvas.create_image(
    x_center,
    376.0 + y_offset,
    image=Option_exit_image
)

# -----------------------------------------------

##################################################
##################################################

################## PIE DE MENU ###################

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    168.0,
    633.0,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    357.99999237060547,
    627.0,
    image=image_image_3
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    424.0,
    627.0,
    image=image_image_4
)

image_image_5 = PhotoImage(
    file=relative_to_assets("image_5.png"))
image_5 = canvas.create_image(
    551.0,
    627.0,
    image=image_image_5
)

image_image_6 = PhotoImage(
    file=relative_to_assets("image_6.png"))
image_6 = canvas.create_image(
    491.0,
    627.0,
    image=image_image_6
)

canvas.create_rectangle(
    212.0,
    626.0,
    225.0,
    639.0,
    fill="#D9D9D9",
    outline="")

canvas.create_rectangle(
    240.0,
    626.0,
    253.0,
    639.0,
    fill="#D9D9D9",
    outline="")

canvas.create_rectangle(
    268.0,
    626.0,
    281.0,
    639.0,
    fill="#D9D9D9",
    outline="")

canvas.create_rectangle(
    295.0,
    626.0,
    308.0,
    639.0,
    fill="#D9D9D9",
    outline="")

##################################################
##################################################

########## DISEÑO SELECTOR DE OPCIONES ###########
# Posiciones de cada

# Define the positions of buttons
options_positions = [canvas.coords(Option_play)[1]+20.0, canvas.coords(Option_play)[1]+91, canvas.coords(Option_play)[1]+162]

# Draw the rectangle initially under button_2
rectangle_position = 0
rectangle = canvas.create_rectangle(
    290.0,
    options_positions[rectangle_position] - 3,
    431.0,
    options_positions[rectangle_position] + 3,
    fill="#FFCC00",
    outline=""
)

# Bind key press event
window.bind('<KeyPress>', on_key_press)

window.resizable(False, False)
window.mainloop()

##################################################
##################################################